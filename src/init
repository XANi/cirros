#!/bin/sh
# vi: ts=4 noexpandtab
#
# This is the initramfs init script

mkdir -p /proc /newroot /dev /tmp
mount -t devtmpfs /dev /dev
mount -t proc /proc /proc

echo "6 4 1 7" >/proc/sys/kernel/printk
echo "=== loading modules ==="
/etc/init.d/load-modules start

debug=0
ROOT=""
MOUNTED=""

while read maj min blk name other; do
	[ -n "${maj}" -a "${maj}" != "major" ] || continue
	umount=0
	mount -o ro "/dev/${name}" "/newroot" >/dev/null 2>&1 &&
		MOUNTED="$MOUNTED ${name}" && umount=1 &&
		[ -x /newroot/sbin/init ] && ROOT="/dev/$name" && break
	[ ${umount} -eq 0 ] || umount /newroot
done < /proc/partitions
read cmdline < /proc/cmdline
for arg in $cmdline; do
	case "$arg" in
		debug-initrd) debug=1;;
	esac
done

if [ $debug -eq 1 ]; then
	echo "dropping into initramfs debug shell"
	/bin/sh
fi

if [ -n "$ROOT" ]; then
	umount /newroot
	growroot "$ROOT"
	echo "Used ${name} for root filesystem"
	cd /newroot
	mount -o ro "$ROOT" "/newroot" || {
		echo "uh-oh, $ROOT was there, but not now" 1>&2
		/bin/sh
	}
	umount /dev
	umount /proc
	echo "=== initramfs loading root from $ROOT ==="
	exec switch_root -c /dev/console /newroot /sbin/init "$@"
else
	# here, no root disk was found, but we'll be nice and mount up
	# the mountable filesystems that we found
	for d in $MOUNTED; do
		mkdir -p /media/$d
		mount /dev/$d /media/$d
	done
	while read maj min blk name other; do
		[ -n "${maj}" -a "${maj}" != "major" ] || continue
		umount=0
		mount -o ro "/dev/${name}" "/newroot" >/dev/null 2>&1 &&
			umount=1 &&
			[ -x /newroot/sbin/init ] && ROOT="/dev/$name" && break
		[ ${umount} -eq 0 ] || umount /newroot
	done < /proc/partitions
	umount /proc
	umount /dev
	echo "=== initramfs did not find root, running as ramdisk ==="
	exec /sbin/init "$@"
fi
echo "badness occurred in ramdisk"
exec /bin/sh

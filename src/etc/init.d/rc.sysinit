#!/bin/sh
# vi: ts=4 noexpandtab

. /lib/cirros/initfuncs

# functions to use
lxc_netdown() {
	local header dev_colon bytes packets other dev
	{
		read header; read header;
		while read dev_colon bytes packets other; do
			dev=${dev_colon%:}
			[ "${dev#lo}" = "${dev}" ] || continue # skip 'lo' host interfaces
			echo "==== taking down interface ${dev} ===="
			ifconfig ${dev} down
			sleep 1
		done
	} < /proc/net/dev
}

write_lxc_is_container() {
	cat <<"EOF"
#!/bin/sh
# This program is written by /etc/rc.d/rc.sysinit.
# It simply reports whether or not this system is in an lxc container

EOF
	if is_lxc; then
		echo "# This is an LXC container"
		echo "exit 0"
	else
		echo "# This is NOT an LXC container"
		echo "exit 1"
	fi
}

fail() { echo "FAIL:" "$@"; }
warn() { echo "WARN:" "$@"; }

### begin init ###

mount -n -t proc /proc /proc || fail "failed mount /proc"
mount -o remount,rw / || fail "failed mount / rw"

mount_once sysfs sysfs /sys -n || fail "failed mount /sys!"

if ! is_lxc; then
	mount_once devtmpfs /dev /dev || fail "failed mount /dev"
fi

mkdir -p /dev/pts /dev/shm

mount -a
hostname -F /etc/hostname

f="/bin/lxc-is-container" && write_lxc_is_container > "$f" && chmod 755 "$f"

if ! is_lxc; then
	for d in $(awk '$2 == "/" { print $1 }' /proc/mounts); do
		[ -e "/dev/${d#/dev}" ] && ln -sf "${d#/dev/}" /dev/root && break
	done
fi

#
is_lxc && lxc_netdown

## pretend you're runlevel 3
for s in /etc/rc3.d/S*; do
	[ -x "$s" ] || continue
	"$s" "start" || warn "$s failed"
done

if is_lxc; then
	grep -q "^pts/0$" /etc/securetty || echo "pts/0" >> /etc/securetty
fi

s_args=""
for tty in tty1 ttyS0; do
	if [ -e /dev/$tty ]; then
		s_args="${s_args:+${s_args} }s/^#$tty:\(.*\)/$tty:\1/;"
	else
		s_args="${s_args:+${s_args} }s/^$tty:\(.*\)/#$tty:\1/;"
	fi
done
[ -z "$s_args" ] ||
	{ sed -i "$s_args" /etc/inittab && kill -HUP 1; }
